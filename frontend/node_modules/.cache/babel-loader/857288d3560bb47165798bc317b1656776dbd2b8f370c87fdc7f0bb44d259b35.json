{"ast":null,"code":"import axios from \"axios\";\n\n// Insertar un nuevo préstamo\nexport const insertarPrestamo = async prestamoNuevo => {\n  try {\n    const response = await axios.post(\"http://localhost:3333/prestamo/nuevoPrestamo\", prestamoNuevo);\n    return response.data; // Retornamos la respuesta para manejarla en el frontend\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error del servidor:\", error.response.data);\n    } else {\n      console.error(\"Error al insertar el préstamo:\", error.message);\n    }\n    throw error;\n  }\n};\n\n// Obtener la lista de préstamos\nexport const obtenerPrestamos = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:3333/prestamo/lista\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener la lista de préstamos:\", error);\n    throw error;\n  }\n};\n\n// Obtener el último préstamo\nexport const obtenerUltimoPrestamo = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:3333/prestamos/obtenerultimo\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener el último préstamo:\", error);\n    throw error;\n  }\n};\n\n// Eliminar un préstamo por número de préstamo\nexport const eliminarPrestamo = async numeroPrestamo => {\n  try {\n    const response = await axios.delete(`http://localhost:3333/prestamo/eliminar/${numeroPrestamo}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al eliminar el préstamo:\", error);\n    throw error;\n  }\n};\n\n// Modificar un préstamo\nexport const modificarPrestamo = async (numeroPrestamo, prestamoActualizado) => {\n  try {\n    const response = await axios.put(`http://localhost:3333/prestamo/modificar/${numeroPrestamo}`, prestamoActualizado);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al modificar el préstamo:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","insertarPrestamo","prestamoNuevo","response","post","data","error","console","message","obtenerPrestamos","get","obtenerUltimoPrestamo","eliminarPrestamo","numeroPrestamo","delete","modificarPrestamo","prestamoActualizado","put"],"sources":["C:/Users/anabq/OneDrive/Documentos/ProyectoIng4/frontend/src/api/RegistrarPrestamo.api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Insertar un nuevo préstamo\r\nexport const insertarPrestamo = async (prestamoNuevo) => {\r\n  try {\r\n    const response = await axios.post(\"http://localhost:3333/prestamo/nuevoPrestamo\", prestamoNuevo);\r\n    return response.data; // Retornamos la respuesta para manejarla en el frontend\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.error(\"Error del servidor:\", error.response.data);\r\n    } else {\r\n      console.error(\"Error al insertar el préstamo:\", error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener la lista de préstamos\r\nexport const obtenerPrestamos = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:3333/prestamo/lista\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener la lista de préstamos:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener el último préstamo\r\nexport const obtenerUltimoPrestamo = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:3333/prestamos/obtenerultimo\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener el último préstamo:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar un préstamo por número de préstamo\r\nexport const eliminarPrestamo = async (numeroPrestamo) => {\r\n  try {\r\n    const response = await axios.delete(`http://localhost:3333/prestamo/eliminar/${numeroPrestamo}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar el préstamo:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Modificar un préstamo\r\nexport const modificarPrestamo = async (numeroPrestamo, prestamoActualizado) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `http://localhost:3333/prestamo/modificar/${numeroPrestamo}`,\r\n      prestamoActualizado\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al modificar el préstamo:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,8CAA8C,EAAEF,aAAa,CAAC;IAChG,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClBI,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IAC3D,CAAC,MAAM;MACLE,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAChE;IACA,MAAMF,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,sCAAsC,CAAC;IACxE,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,+CAA+C,CAAC;IACjF,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,gBAAgB,GAAG,MAAOC,cAAc,IAAK;EACxD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,MAAM,CAAC,2CAA2CD,cAAc,EAAE,CAAC;IAChG,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,iBAAiB,GAAG,MAAAA,CAAOF,cAAc,EAAEG,mBAAmB,KAAK;EAC9E,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACiB,GAAG,CAC9B,4CAA4CJ,cAAc,EAAE,EAC5DG,mBACF,CAAC;IACD,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}