{"ast":null,"code":"import axios from 'axios';\nexport const insertarAnalista = async analistaNuevo => {\n  try {\n    const {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      personaCedula,\n      telefono,\n      correoElectronico,\n      contrasena\n    } = analistaNuevo;\n    console.log('Datos enviados para insertar analista:', {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      personaCedula,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    const response = await axios.post('http://localhost:3333/analista/insertar', {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      personaCedula,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    console.log('Respuesta de la API:', response.data);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('Error del servidor:', error.response.data);\n    } else {\n      console.error('Error al insertar el analista:', error.message);\n    }\n    throw error;\n  }\n};\nexport const obtenerAnalistas = async () => {\n  try {\n    const response = await axios.get('http://localhost:3333/analistas/obtenerAnalistas');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener la lista de analistas:', error);\n    throw error;\n  }\n};\nexport const obtenerAnalistaPorId = async personaCedula => {\n  try {\n    const response = await axios.get(`http://localhost:3333/analista/obtenerAnalista/${personaCedula}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el analista por cédula:', error);\n    throw error;\n  }\n};\nexport const eliminarAnalista = async personaCedula => {\n  try {\n    const response = await axios.delete(`http://localhost:3333/analista/eliminarAnalista/${personaCedula}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el analista:', error);\n    throw error;\n  }\n};\nexport const modificarAnalista = async (personaCedula, analistaActualizado) => {\n  try {\n    const {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      telefono,\n      correoElectronico,\n      contrasena\n    } = analistaActualizado;\n    console.log('Datos enviados para modificar analista:', {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    const response = await axios.put(`http://localhost:3333/analista/modificarAnalista/${personaCedula}`, {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    console.log('Respuesta de la API:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error al modificar el analista:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","insertarAnalista","analistaNuevo","nombre","primerApellido","segundoApellido","personaCedula","telefono","correoElectronico","contrasena","console","log","response","post","data","error","message","obtenerAnalistas","get","obtenerAnalistaPorId","eliminarAnalista","delete","modificarAnalista","analistaActualizado","put"],"sources":["C:/Users/anabq/OneDrive/Documentos/ProyectoIng4/frontend/src/api/RegistrarAnalista.api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const insertarAnalista = async (analistaNuevo) => {\r\n  try {\r\n    const { nombre, primerApellido, segundoApellido, personaCedula, telefono, correoElectronico, contrasena } = analistaNuevo;\r\n    console.log('Datos enviados para insertar analista:', { nombre, primerApellido, segundoApellido, personaCedula, telefono, correoElectronico, contrasena });\r\n\r\n    const response = await axios.post('http://localhost:3333/analista/insertar', {\r\n      nombre,\r\n      primerApellido,\r\n      segundoApellido,\r\n      personaCedula,\r\n      telefono,\r\n      correoElectronico,\r\n      contrasena,\r\n    });\r\n\r\n    console.log('Respuesta de la API:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.error('Error del servidor:', error.response.data);\r\n    } else {\r\n      console.error('Error al insertar el analista:', error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const obtenerAnalistas = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:3333/analistas/obtenerAnalistas');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener la lista de analistas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const obtenerAnalistaPorId = async (personaCedula) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:3333/analista/obtenerAnalista/${personaCedula}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener el analista por cédula:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const eliminarAnalista = async (personaCedula) => {\r\n  try {\r\n    const response = await axios.delete(`http://localhost:3333/analista/eliminarAnalista/${personaCedula}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al eliminar el analista:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const modificarAnalista = async (personaCedula, analistaActualizado) => {\r\n  try {\r\n    const { nombre, primerApellido, segundoApellido, telefono, correoElectronico, contrasena } = analistaActualizado;\r\n    console.log('Datos enviados para modificar analista:', {\r\n      nombre,\r\n      primerApellido,\r\n      segundoApellido,\r\n      telefono,\r\n      correoElectronico,\r\n      contrasena,\r\n    });\r\n\r\n    const response = await axios.put(\r\n      `http://localhost:3333/analista/modificarAnalista/${personaCedula}`,\r\n      {\r\n        nombre,\r\n        primerApellido,\r\n        segundoApellido,\r\n        telefono,\r\n        correoElectronico,\r\n        contrasena,\r\n      }\r\n    );\r\n\r\n    console.log('Respuesta de la API:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al modificar el analista:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}