{"ast":null,"code":"import axios from \"axios\";\nexport const insertarCliente = async clienteNuevo => {\n  try {\n    const {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      Cedula,\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    } = clienteNuevo;\n    const response = await axios.post(\"http://localhost:3333/cliente/crear-cliente\", {\n      Cedula,\n      nombre,\n      primerApellido,\n      segundoApellido,\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    if (response.data.mensaje) {\n      return {\n        message: response.data.mensaje\n      };\n    } else {\n      return {\n        error: \"Hubo un error con la creaci贸n del cliente\"\n      };\n    }\n  } catch (error) {\n    console.error(\"Error al insertar el cliente:\", error);\n    return {\n      error: \"Error en la comunicaci贸n con el servidor\"\n    };\n  }\n};\nexport const obtenerClientes = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:3333/cliente/obtener-clientes\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener la lista de clientes:\", error);\n    throw error;\n  }\n};\nexport const eliminarCliente = async idClientes => {\n  try {\n    const response = await axios.delete(`http://localhost:3333/cliente/eliminarCliente/${idClientes}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al eliminar el cliente:\", error);\n    throw error;\n  }\n};\nexport const modificarCliente = async (idClientes, clienteActualizado) => {\n  try {\n    const {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    } = clienteActualizado;\n    console.log(\"Datos enviados para modificar cliente:\", {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    const response = await axios.put(`http://localhost:3333/cliente/modificarCliente/${idClientes}`, {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    console.log(\"Respuesta de la API:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al modificar el cliente:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","insertarCliente","clienteNuevo","nombre","primerApellido","segundoApellido","Cedula","direccion","telefono","correoElectronico","contrasena","response","post","data","mensaje","message","error","console","obtenerClientes","get","eliminarCliente","idClientes","delete","modificarCliente","clienteActualizado","log","put"],"sources":["C:/Users/anabq/OneDrive/Documentos/ProyectoIng4/frontend/src/api/RegistrarCliente.api.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const insertarCliente = async (clienteNuevo) => {\r\n  try {\r\n    const { nombre, primerApellido, segundoApellido, Cedula, direccion, telefono, correoElectronico, contrasena } = clienteNuevo;\r\n    const response = await axios.post(\r\n      \"http://localhost:3333/cliente/crear-cliente\",\r\n      {\r\n        Cedula,\r\n        nombre,\r\n        primerApellido,\r\n        segundoApellido,\r\n        direccion,\r\n        telefono,\r\n        correoElectronico,\r\n        contrasena\r\n      }\r\n    );\r\n    if (response.data.mensaje) {\r\n      return { message: response.data.mensaje };\r\n    } else {\r\n      return { error: \"Hubo un error con la creaci贸n del cliente\" };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error al insertar el cliente:\", error);\r\n    return { error: \"Error en la comunicaci贸n con el servidor\" };\r\n  }\r\n};\r\n\r\nexport const obtenerClientes = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:3333/cliente/obtener-clientes\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener la lista de clientes:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const eliminarCliente = async (idClientes) => {\r\n  try {\r\n    const response = await axios.delete(`http://localhost:3333/cliente/eliminarCliente/${idClientes}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar el cliente:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const modificarCliente = async (idClientes, clienteActualizado) => {\r\n  try {\r\n    const { nombre, primerApellido, segundoApellido, direccion, telefono, correoElectronico, contrasena } = clienteActualizado;\r\n    console.log(\"Datos enviados para modificar cliente:\", {\r\n      nombre,\r\n      primerApellido,\r\n      segundoApellido,\r\n      direccion,\r\n      telefono,\r\n      correoElectronico,\r\n      contrasena\r\n    });\r\n    const response = await axios.put(\r\n      `http://localhost:3333/cliente/modificarCliente/${idClientes}`,\r\n      {\r\n        nombre,\r\n        primerApellido,\r\n        segundoApellido,\r\n        direccion,\r\n        telefono,\r\n        correoElectronico,\r\n        contrasena\r\n      }\r\n    );\r\n    console.log(\"Respuesta de la API:\", response.data); \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al modificar el cliente:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,eAAe,GAAG,MAAOC,YAAY,IAAK;EACrD,IAAI;IACF,MAAM;MAAEC,MAAM;MAAEC,cAAc;MAAEC,eAAe;MAAEC,MAAM;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,iBAAiB;MAAEC;IAAW,CAAC,GAAGR,YAAY;IAC5H,MAAMS,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC/B,6CAA6C,EAC7C;MACEN,MAAM;MACNH,MAAM;MACNC,cAAc;MACdC,eAAe;MACfE,SAAS;MACTC,QAAQ;MACRC,iBAAiB;MACjBC;IACF,CACF,CAAC;IACD,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MACzB,OAAO;QAAEC,OAAO,EAAEJ,QAAQ,CAACE,IAAI,CAACC;MAAQ,CAAC;IAC3C,CAAC,MAAM;MACL,OAAO;QAAEE,KAAK,EAAE;MAA4C,CAAC;IAC/D;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO;MAAEA,KAAK,EAAE;IAA2C,CAAC;EAC9D;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMX,KAAK,CAACmB,GAAG,CAAC,gDAAgD,CAAC;IAClF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMI,eAAe,GAAG,MAAOC,UAAU,IAAK;EACnD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMX,KAAK,CAACsB,MAAM,CAAC,iDAAiDD,UAAU,EAAE,CAAC;IAClG,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMO,gBAAgB,GAAG,MAAAA,CAAOF,UAAU,EAAEG,kBAAkB,KAAK;EACxE,IAAI;IACF,MAAM;MAAErB,MAAM;MAAEC,cAAc;MAAEC,eAAe;MAAEE,SAAS;MAAEC,QAAQ;MAAEC,iBAAiB;MAAEC;IAAW,CAAC,GAAGc,kBAAkB;IAC1HP,OAAO,CAACQ,GAAG,CAAC,wCAAwC,EAAE;MACpDtB,MAAM;MACNC,cAAc;MACdC,eAAe;MACfE,SAAS;MACTC,QAAQ;MACRC,iBAAiB;MACjBC;IACF,CAAC,CAAC;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC0B,GAAG,CAC9B,kDAAkDL,UAAU,EAAE,EAC9D;MACElB,MAAM;MACNC,cAAc;MACdC,eAAe;MACfE,SAAS;MACTC,QAAQ;MACRC,iBAAiB;MACjBC;IACF,CACF,CAAC;IACDO,OAAO,CAACQ,GAAG,CAAC,sBAAsB,EAAEd,QAAQ,CAACE,IAAI,CAAC;IAClD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}