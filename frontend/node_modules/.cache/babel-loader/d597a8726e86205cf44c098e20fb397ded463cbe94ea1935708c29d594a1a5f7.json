{"ast":null,"code":"import axios from \"axios\";\nexport const insertarCliente = async clienteNuevo => {\n  try {\n    const {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      direccion,\n      telefono,\n      correoElectronico,\n      personaCedula,\n      contrasena\n    } = clienteNuevo;\n    console.log(\"Datos enviados para insertar cliente:\", {\n      direccion,\n      telefono,\n      correoElectronico,\n      personaCedula,\n      contrasena\n    });\n    const response = await axios.post(\"http://localhost:3333/cliente/crear-cliente\", {\n      nombre,\n      primerApellido,\n      segundoApellido,\n      direccion,\n      telefono,\n      correoElectronico,\n      personaCedula,\n      contrasena\n    });\n    console.log(\"Respuesta de la API:\", response.data);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error del servidor:\", error.response.data);\n    } else {\n      console.error(\"Error al insertar el cliente:\", error.message);\n    }\n    throw error;\n  }\n};\nexport const obtenerClientes = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:3333/cliente/obtenerClientes\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener la lista de clientes:\", error);\n    throw error;\n  }\n};\nexport const obtenerClientePorId = async personaCedula => {\n  try {\n    const response = await axios.get(`http://localhost:3333/cliente/obtenerCliente/${personaCedula}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener el cliente por cédula:\", error);\n    throw error;\n  }\n};\nexport const eliminarCliente = async personaCedula => {\n  try {\n    const response = await axios.delete(`http://localhost:3333/cliente/eliminarCliente/${personaCedula}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al eliminar el cliente:\", error);\n    throw error;\n  }\n};\nexport const modificarCliente = async (personaCedula, clienteActualizado) => {\n  try {\n    const {\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    } = clienteActualizado;\n    console.log(\"Datos enviados para modificar cliente:\", {\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    const response = await axios.put(`http://localhost:3333/cliente/modificarCliente/${personaCedula}`, {\n      direccion,\n      telefono,\n      correoElectronico,\n      contrasena\n    });\n    console.log(\"Respuesta de la API:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al modificar el cliente:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","insertarCliente","clienteNuevo","nombre","primerApellido","segundoApellido","direccion","telefono","correoElectronico","personaCedula","contrasena","console","log","response","post","data","error","message","obtenerClientes","get","obtenerClientePorId","eliminarCliente","delete","modificarCliente","clienteActualizado","put"],"sources":["C:/Users/anabq/OneDrive/Documentos/ProyectoIng4/frontend/src/api/RegistrarCliente.api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const insertarCliente = async (clienteNuevo) => {\r\n  try {\r\n    const { nombre, primerApellido, segundoApellido, direccion, telefono, correoElectronico, personaCedula, contrasena } = clienteNuevo;\r\n    console.log(\"Datos enviados para insertar cliente:\", { direccion, telefono, correoElectronico, personaCedula, contrasena });\r\n    const response = await axios.post(\r\n      \"http://localhost:3333/cliente/crear-cliente\",\r\n      {\r\n        nombre, \r\n        primerApellido,\r\n        segundoApellido,\r\n        direccion,\r\n        telefono,\r\n        correoElectronico,\r\n        personaCedula,\r\n        contrasena\r\n      }\r\n    );\r\n    console.log(\"Respuesta de la API:\", response.data); \r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.error(\"Error del servidor:\", error.response.data);\r\n    } else {\r\n      console.error(\"Error al insertar el cliente:\", error.message);\r\n    }\r\n    throw error;\r\n  }\r\n  \r\n};\r\n\r\nexport const obtenerClientes = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:3333/cliente/obtenerClientes\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener la lista de clientes:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const obtenerClientePorId = async (personaCedula) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:3333/cliente/obtenerCliente/${personaCedula}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener el cliente por cédula:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const eliminarCliente = async (personaCedula) => {\r\n  try {\r\n    const response = await axios.delete(`http://localhost:3333/cliente/eliminarCliente/${personaCedula}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar el cliente:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const modificarCliente = async (personaCedula, clienteActualizado) => {\r\n  try {\r\n    const { direccion, telefono, correoElectronico, contrasena } = clienteActualizado;\r\n    console.log(\"Datos enviados para modificar cliente:\", {\r\n      direccion,\r\n      telefono,\r\n      correoElectronico,\r\n      contrasena\r\n    });\r\n    const response = await axios.put(\r\n      `http://localhost:3333/cliente/modificarCliente/${personaCedula}`,\r\n      {\r\n        direccion,\r\n        telefono,\r\n        correoElectronico,\r\n        contrasena\r\n      }\r\n    );\r\n    console.log(\"Respuesta de la API:\", response.data); \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al modificar el cliente:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAOC,YAAY,IAAK;EACrD,IAAI;IACF,MAAM;MAAEC,MAAM;MAAEC,cAAc;MAAEC,eAAe;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,iBAAiB;MAAEC,aAAa;MAAEC;IAAW,CAAC,GAAGR,YAAY;IACnIS,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE;MAAEN,SAAS;MAAEC,QAAQ;MAAEC,iBAAiB;MAAEC,aAAa;MAAEC;IAAW,CAAC,CAAC;IAC3H,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,6CAA6C,EAC7C;MACEX,MAAM;MACNC,cAAc;MACdC,eAAe;MACfC,SAAS;MACTC,QAAQ;MACRC,iBAAiB;MACjBC,aAAa;MACbC;IACF,CACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAClD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClBF,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IAC3D,CAAC,MAAM;MACLJ,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC/D;IACA,MAAMD,KAAK;EACb;AAEF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMb,KAAK,CAACmB,GAAG,CAAC,+CAA+C,CAAC;IACjF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAG,MAAOX,aAAa,IAAK;EAC1D,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMb,KAAK,CAACmB,GAAG,CAAC,gDAAgDV,aAAa,EAAE,CAAC;IACjG,OAAOI,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,MAAOZ,aAAa,IAAK;EACtD,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMb,KAAK,CAACsB,MAAM,CAAC,iDAAiDb,aAAa,EAAE,CAAC;IACrG,OAAOI,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,MAAAA,CAAOd,aAAa,EAAEe,kBAAkB,KAAK;EAC3E,IAAI;IACF,MAAM;MAAElB,SAAS;MAAEC,QAAQ;MAAEC,iBAAiB;MAAEE;IAAW,CAAC,GAAGc,kBAAkB;IACjFb,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE;MACpDN,SAAS;MACTC,QAAQ;MACRC,iBAAiB;MACjBE;IACF,CAAC,CAAC;IACF,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACyB,GAAG,CAC9B,kDAAkDhB,aAAa,EAAE,EACjE;MACEH,SAAS;MACTC,QAAQ;MACRC,iBAAiB;MACjBE;IACF,CACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAClD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}