{"ast":null,"code":"import { connectDB } from '../database.js';\nimport sql from 'mssql';\nexport class PrestamosController {}\nPrestamosController.insertarPrestamo = async ({\n  monto,\n  plazoMeses,\n  fechaInicio,\n  numeroPrestamo,\n  tasaInteresMoratoria,\n  fechaVencimiento,\n  diaPago,\n  IdClientes,\n  clientesPersonaCedula\n}) => {\n  try {\n    const connection = await connectDB();\n\n    // Declarar el parámetro de salida @p_mensaje\n    const request = new sql.Request(connection);\n\n    // Configuración de los parámetros de entrada\n    request.input('p_idPrestamos', sql.Int, null); // el idPrestamos se puede generar automáticamente\n    request.input('p_monto', sql.Decimal(10, 2), monto);\n    request.input('p_plazoMeses', sql.Int, plazoMeses);\n    request.input('p_fechaInicio', sql.Date, fechaInicio);\n    request.input('p_numeroPrestamo', sql.VarChar(45), numeroPrestamo);\n    request.input('p_tasaInteresMoratoria', sql.Decimal(10, 2), tasaInteresMoratoria);\n    request.input('p_fechaVencimiento', sql.Date, fechaVencimiento);\n    request.input('p_diaPago', sql.Int, diaPago);\n    request.input('p_IdClientes', sql.Int, IdClientes);\n    request.input('p_clientesPersonaCedula', sql.Int, clientesPersonaCedula);\n\n    // Declarar el parámetro de salida @p_mensaje\n    request.output('p_mensaje', sql.VarChar(255)); // Definir el tipo y tamaño adecuado\n\n    // Ejecutar la consulta\n    await request.execute('agregarPrestamo');\n\n    // Obtener el mensaje de salida\n    const mensaje = request.parameters.p_mensaje.value;\n    console.log(mensaje);\n    return mensaje;\n  } catch (error) {\n    console.error('Error al insertar el préstamo:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["connectDB","sql","PrestamosController","insertarPrestamo","monto","plazoMeses","fechaInicio","numeroPrestamo","tasaInteresMoratoria","fechaVencimiento","diaPago","IdClientes","clientesPersonaCedula","connection","request","Request","input","Int","Decimal","Date","VarChar","output","execute","mensaje","parameters","p_mensaje","value","console","log","error"],"sources":["C:/Users/anabq/OneDrive/Documentos/ProyectoIng4/frontend/src/api/RegistrarPrestamo.api.js"],"sourcesContent":["import { connectDB } from '../database.js';\r\nimport sql from 'mssql';\r\n\r\nexport class PrestamosController {\r\n  static insertarPrestamo = async ({\r\n    monto,\r\n    plazoMeses,\r\n    fechaInicio,\r\n    numeroPrestamo,\r\n    tasaInteresMoratoria,\r\n    fechaVencimiento,\r\n    diaPago,\r\n    IdClientes,\r\n    clientesPersonaCedula\r\n  }) => {\r\n    try {\r\n      const connection = await connectDB();\r\n\r\n      // Declarar el parámetro de salida @p_mensaje\r\n      const request = new sql.Request(connection);\r\n\r\n      // Configuración de los parámetros de entrada\r\n      request.input('p_idPrestamos', sql.Int, null); // el idPrestamos se puede generar automáticamente\r\n      request.input('p_monto', sql.Decimal(10, 2), monto);\r\n      request.input('p_plazoMeses', sql.Int, plazoMeses);\r\n      request.input('p_fechaInicio', sql.Date, fechaInicio);\r\n      request.input('p_numeroPrestamo', sql.VarChar(45), numeroPrestamo);\r\n      request.input('p_tasaInteresMoratoria', sql.Decimal(10, 2), tasaInteresMoratoria);\r\n      request.input('p_fechaVencimiento', sql.Date, fechaVencimiento);\r\n      request.input('p_diaPago', sql.Int, diaPago);\r\n      request.input('p_IdClientes', sql.Int, IdClientes);\r\n      request.input('p_clientesPersonaCedula', sql.Int, clientesPersonaCedula);\r\n\r\n      // Declarar el parámetro de salida @p_mensaje\r\n      request.output('p_mensaje', sql.VarChar(255)); // Definir el tipo y tamaño adecuado\r\n\r\n      // Ejecutar la consulta\r\n      await request.execute('agregarPrestamo');\r\n\r\n      // Obtener el mensaje de salida\r\n      const mensaje = request.parameters.p_mensaje.value;\r\n      console.log(mensaje);\r\n      return mensaje;\r\n\r\n    } catch (error) {\r\n      console.error('Error al insertar el préstamo:', error);\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,OAAOC,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,mBAAmB,CAAC;AAApBA,mBAAmB,CACvBC,gBAAgB,GAAG,OAAO;EAC/BC,KAAK;EACLC,UAAU;EACVC,WAAW;EACXC,cAAc;EACdC,oBAAoB;EACpBC,gBAAgB;EAChBC,OAAO;EACPC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,IAAI;IACF,MAAMC,UAAU,GAAG,MAAMb,SAAS,CAAC,CAAC;;IAEpC;IACA,MAAMc,OAAO,GAAG,IAAIb,GAAG,CAACc,OAAO,CAACF,UAAU,CAAC;;IAE3C;IACAC,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEf,GAAG,CAACgB,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IAC/CH,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEf,GAAG,CAACiB,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,EAAEd,KAAK,CAAC;IACnDU,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEf,GAAG,CAACgB,GAAG,EAAEZ,UAAU,CAAC;IAClDS,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEf,GAAG,CAACkB,IAAI,EAAEb,WAAW,CAAC;IACrDQ,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEf,GAAG,CAACmB,OAAO,CAAC,EAAE,CAAC,EAAEb,cAAc,CAAC;IAClEO,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEf,GAAG,CAACiB,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,EAAEV,oBAAoB,CAAC;IACjFM,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEf,GAAG,CAACkB,IAAI,EAAEV,gBAAgB,CAAC;IAC/DK,OAAO,CAACE,KAAK,CAAC,WAAW,EAAEf,GAAG,CAACgB,GAAG,EAAEP,OAAO,CAAC;IAC5CI,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEf,GAAG,CAACgB,GAAG,EAAEN,UAAU,CAAC;IAClDG,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEf,GAAG,CAACgB,GAAG,EAAEL,qBAAqB,CAAC;;IAExE;IACAE,OAAO,CAACO,MAAM,CAAC,WAAW,EAAEpB,GAAG,CAACmB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE/C;IACA,MAAMN,OAAO,CAACQ,OAAO,CAAC,iBAAiB,CAAC;;IAExC;IACA,MAAMC,OAAO,GAAGT,OAAO,CAACU,UAAU,CAACC,SAAS,CAACC,KAAK;IAClDC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACpB,OAAOA,OAAO;EAEhB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}